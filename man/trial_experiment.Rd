% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trial_experiment.R
\name{trial_experiment}
\alias{trial_experiment}
\title{Run LLM Trial Experiment}
\usage{
trial_experiment(
  model_key,
  generation_interface = "chat",
  api_key,
  api_url = NULL,
  data,
  trial_prompt = NULL,
  system_content = NULL,
  assistant_content = NULL,
  optionals = NULL,
  role_mapping = NULL,
  stream = FALSE,
  timeout = 120,
  repeats = 1,
  random = FALSE,
  delay = 0,
  output_path = NULL,
  overwrite = TRUE,
  return_raw = FALSE
)
}
\arguments{
\item{model_key}{Character(1). Registry key (e.g., "deepseek-chat" or "deepseek-chat@proxy").}

\item{generation_interface}{Character(1). Interface name; defaults to "chat".}

\item{api_key}{Character(1). Provider API key.}

\item{api_url}{Optional character(1). Overrides registry default URL; required for non-official providers.}

\item{data}{data.frame/tibble with `Material`; may contain `TrialPrompt`.}

\item{trial_prompt}{Optional character(1). Global trial prompt (used when row `TrialPrompt` is missing).}

\item{system_content}{Optional character(1) or NULL. If NULL, use registry `default_system` when available.}

\item{assistant_content}{Optional static few-shot seed: character vector or a list of message objects
(`list(role=..., content=...)`). These appear before rolling history and are preserved as-is.}

\item{optionals}{Optional named list. If NULL, use registry typed defaults; user keys are not merged with defaults.}

\item{role_mapping}{Optional list. Override registry role names (effective only when the template uses \code{\${ROLE}}).}

\item{stream}{Logical(1) or NULL. NULL = use registry default; otherwise force streaming/non-streaming.}

\item{timeout}{Integer(1). Per-request HTTP/SSE timeout in seconds (passed to \code{llm_caller()}).}

\item{repeats}{Integer(1). Number of repetitions per trial.}

\item{random}{Logical(1). Randomize trial order.}

\item{delay}{Numeric(1). Delay (seconds) between trials.}

\item{output_path}{Character or NULL. Where to save results/logs (compatible with prior schema).}

\item{overwrite}{Logical(1). Overwrite existing output files.}

\item{return_raw}{Logical(1). Include raw request/response for debugging.}
}
\value{
A data.frame/tibble with PsyLingLLM schema columns:
  Response, Think, ModelName, TotalResponseTime, FirstTokenLatency (if stream),
  PromptTokens, CompletionTokens, TrialStatus, Streaming, Timestamp, RequestID.
}
\description{
Executes repeated trials using a registry-defined LLM interface. All request
assembly (URL, headers, body/messages, defaults) is driven by the registry
and calls are delegated to \code{llm_caller()}.
}
\details{
Columns in `data`:
- Required: `Material`
- Optional: `TrialPrompt` (row-level), which overrides the global `trial_prompt` when present.

Error/timeout handling:
- Network/SSE timeout inside \code{llm_caller()} returns \code{status = 599}
  and is marked as \code{"TIMEOUT"} without stopping the loop.
- HTTP errors (\code{status >= 400}) are marked as \code{"ERROR"} and also continue.
}
