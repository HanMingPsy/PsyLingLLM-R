% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_registry_entry.R
\name{get_registry_entry}
\alias{get_registry_entry}
\title{Retrieve a registry interface entry (inputs / outputs / streaming)}
\usage{
get_registry_entry(
  model_key,
  generation_interface = NULL,
  path = get_registry_path()
)
}
\arguments{
\item{model_key}{Character(1). Either `"<model>"` or `"<model>@<provider>"`.}

\item{generation_interface}{Character(1) or NULL. One of `"chat"`, `"completion"`,
`"messages"`, `"conversation"`, `"responses"`, `"generate"`, `"inference"`.
If `NULL` and the model has exactly one interface, that interface is selected.}

\item{path}{Character(1). User registry path. Defaults to `get_registry_path()`.}
}
\value{
A list with fields:
\describe{
  \item{model_key}{Resolved key (may include `@provider`).}
  \item{interface}{Selected interface name.}
  \item{provider}{Provider label from the registry node (normalized to lower).}
  \item{reasoning}{Logical. Whether the provider exposes reasoning fields.}
  \item{input}{List with `default_url`, `headers`, `body`, `fallback_body`,
  `optional_defaults`, `default_system`, and `role_mapping` (kept as provided).}
  \item{output}{List with `respond_path`, `thinking_path`, `id_path`,
  `object_path`, and optional `token_usage_path`.}
  \item{streaming}{List with `enabled`, `delta_path`, `thinking_delta_path`.}
  \item{interfaces}{Character vector of available interfaces for this model.}
}
}
\description{
Look up a model first in the **user registry** (by default at
`get_registry_path()`), and if not found, fall back to the **system
registry** located at `inst/registry/model_registry.yaml`. Select an interface
(e.g., `"chat"`, `"completion"`) and return a **normalized** node ready for
request assembly.
}
\details{
Normalization rules:
- `input.role_mapping` may be partially specified or absent; we keep it as is
  (possibly `NULL` per key). Downstream callers decide whether to apply it.
- Boolean-like values such as `"yes"/"no"`, `"true"/"false"`, `0/1` are
  coerced to logicals for `reasoning` and `streaming.enabled`.
- `optional_defaults` scalars are lightly normalized (numeric-like strings →
  numeric; boolean-like strings → logical) while preserving unknown vendor
  fields.
- Output path fields (e.g., `respond_path`, `delta_path`) are **left as-is**
  (e.g., `list("choices..message.content")`).

Model key conventions:
- Official providers typically use keys **without** `@` (e.g., `"deepseek-chat"`).
- Non-official providers should use keys **with** `@provider`
  (e.g., `"deepseek-chat@proxy"`).
}
\examples{
\dontrun{
  ent <- get_registry_entry("deepseek-chat", generation_interface = "chat")
  ent$input$role_mapping$user
  ent$output$respond_path
}
}
