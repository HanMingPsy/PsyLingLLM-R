% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/register_build_input.R
\name{build_standardized_input}
\alias{build_standardized_input}
\title{Build standardized Pass-2 headers & body from Pass-1 raw inputs}
\usage{
build_standardized_input(pass1_headers, pass1_body, optional_keys)
}
\arguments{
\item{pass1_headers}{List (raw). The original request headers captured during Pass-1.}

\item{pass1_body}{List (raw). The original request body captured during Pass-1.}

\item{optional_keys}{Character vector or list. Optional field names to be
explicitly retained in Pass-2 inference (e.g. `"stream"`, `"max_tokens"`).
These serve as hints to preserve or normalize optional input elements.}
}
\value{
A named list containing three components:
  \describe{
    \item{headers_p2}{Standardized headers for Pass-2 processing.}
    \item{body_p2}{Normalized body structure, inferred from `pass1_body`.}
    \item{diagnostics}{List of structural inference metadata, including
      style, container keys, message index, content keys, role mappings,
      default system prompt, and detected model ID.}
  }
}
\description{
This function reconstructs a normalized set of request headers and body
for Pass-2 processing, based purely on the structural layout of the
original Pass-1 input. It uses structural inference around
\code{"\${CONTENT}"} placeholders rather than heuristic keyword matching.
}
\details{
The goal is to generate a consistent and minimal representation of
model input for registry or downstream YAML serialization.
}
\seealso{
[build_body_pass2_structural()], [complete_headers_for_pass2()]
}
